<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SingSo | 心事杂想</title>
  
  <subtitle>骨灰灰崽的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sqmwin.github.io/"/>
  <updated>2018-01-01T06:10:56.581Z</updated>
  <id>https://sqmwin.github.io/</id>
  
  <author>
    <name>Qiming Song</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java性能优化[04] - 关于finalize函数</title>
    <link href="https://sqmwin.github.io/2018/01/01/java-attetion-3-performance-4/"/>
    <id>https://sqmwin.github.io/2018/01/01/java-attetion-3-performance-4/</id>
    <published>2017-12-31T16:17:15.000Z</published>
    <updated>2018-01-01T06:10:56.581Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本文摘抄自编程随想的博客&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    上次的帖子聊了垃圾回收器的调优，当时啰嗦了比较长的篇幅，就没再继续提 finalize 的事儿（其实这玩意儿和 GC 是沾点儿边的）。今天咱就把 finalize 函数相关的性能话题拿来说一下。&lt;/p&gt;
    
    </summary>
    
      <category term="Java性能优化" scheme="https://sqmwin.github.io/categories/Java%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="学习技巧" scheme="https://sqmwin.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Java性能优化" scheme="https://sqmwin.github.io/tags/Java%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Java性能优化[03] - 垃圾回收(GC)</title>
    <link href="https://sqmwin.github.io/2018/01/01/java-attetion-3-performance-3/"/>
    <id>https://sqmwin.github.io/2018/01/01/java-attetion-3-performance-3/</id>
    <published>2017-12-31T16:16:42.000Z</published>
    <updated>2018-01-01T06:10:56.581Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本文摘抄自编程随想的博客&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;JVM-的内存空间&quot;&gt;&lt;a href=&quot;#JVM-的内存空间&quot; class=&quot;headerlink&quot; title=&quot;JVM 的内存空间&quot;&gt;&lt;/a&gt;JVM 的内存空间&lt;/h3&gt;&lt;p&gt;　　在 Java 虚拟机规范中（具体章节请看“这里”），提及了如下几种类型的内存空间：&lt;/p&gt;
    
    </summary>
    
      <category term="Java性能优化" scheme="https://sqmwin.github.io/categories/Java%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="学习技巧" scheme="https://sqmwin.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Java性能优化" scheme="https://sqmwin.github.io/tags/Java%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Java性能优化[02] - 字符串过滤实战</title>
    <link href="https://sqmwin.github.io/2018/01/01/java-attetion-3-performance-2/"/>
    <id>https://sqmwin.github.io/2018/01/01/java-attetion-3-performance-2/</id>
    <published>2017-12-31T16:14:30.000Z</published>
    <updated>2018-01-01T06:10:56.581Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本文摘抄自编程随想的博客&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;一个简单的需求&quot;&gt;&lt;a href=&quot;#一个简单的需求&quot; class=&quot;headerlink&quot; title=&quot;一个简单的需求&quot;&gt;&lt;/a&gt;一个简单的需求&lt;/h3&gt;&lt;p&gt;　　首先描述一下需求：&lt;/p&gt;
&lt;p&gt;给定一个 String 对象，过滤掉除了&lt;strong&gt;数字&lt;/strong&gt;字符’0’到’9’以外的其它字符。要求时间开销尽可能小。过滤函数的原型如下：&lt;/p&gt;
    
    </summary>
    
      <category term="Java性能优化" scheme="https://sqmwin.github.io/categories/Java%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="学习技巧" scheme="https://sqmwin.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Java性能优化" scheme="https://sqmwin.github.io/tags/Java%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Java性能优化[01] - 基本类型 vs 引用类型</title>
    <link href="https://sqmwin.github.io/2018/01/01/java-attetion-3-performance-1/"/>
    <id>https://sqmwin.github.io/2018/01/01/java-attetion-3-performance-1/</id>
    <published>2017-12-31T16:12:33.000Z</published>
    <updated>2018-01-01T06:10:56.581Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本文摘抄自编程随想的博客&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    在 Java 性能优化系列中，内存管理是一个要优先考虑的关键因素。而说到内存分配，就必然会涉及到基本类型和引用类型。所以我们今天就先来介绍一下这两种类型在性能方面各自有什么奥妙（关于引用类型的其它奥妙，请看“&lt;a href=&quot;#3. Java新手进阶:细说引用类型&quot;&gt;这里&lt;/a&gt;”）。&lt;/p&gt;
    
    </summary>
    
      <category term="Java性能优化" scheme="https://sqmwin.github.io/categories/Java%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="学习技巧" scheme="https://sqmwin.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Java性能优化" scheme="https://sqmwin.github.io/tags/Java%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>无处不在的二八原理</title>
    <link href="https://sqmwin.github.io/2017/12/31/java-attetion-5/"/>
    <id>https://sqmwin.github.io/2017/12/31/java-attetion-5/</id>
    <published>2017-12-31T11:26:46.000Z</published>
    <updated>2017-12-31T18:39:36.434Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本文摘抄自编程随想的博客&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;什么是二八原理&quot;&gt;&lt;a href=&quot;#什么是二八原理&quot; class=&quot;headerlink&quot; title=&quot;什么是二八原理&quot;&gt;&lt;/a&gt;什么是二八原理&lt;/h2&gt;&lt;p&gt;　　估计看俺博客的人里面，应该有很多人听说过二八原理（如果你之前从来没听说过，那你的知识面有太窄的嫌疑）。但是知道二八原理的人有很多却不会（或者不善于）运用。直接的后果就是你在各种事情上付出了很多时间与精力，但是回报却很少。鉴于该原理非常非常的实用，俺打算专门写一个系列来聊聊和它相关的话题。&lt;/p&gt;
    
    </summary>
    
      <category term="Java注意" scheme="https://sqmwin.github.io/categories/Java%E6%B3%A8%E6%84%8F/"/>
    
    
      <category term="学习技巧" scheme="https://sqmwin.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%8A%80%E5%B7%A7/"/>
    
      <category term="二八原理" scheme="https://sqmwin.github.io/tags/%E4%BA%8C%E5%85%AB%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Java新手进阶:细说引用类型</title>
    <link href="https://sqmwin.github.io/2017/12/31/java-attetion-4/"/>
    <id>https://sqmwin.github.io/2017/12/31/java-attetion-4/</id>
    <published>2017-12-31T11:24:42.000Z</published>
    <updated>2018-01-01T06:10:56.581Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本文摘抄自编程随想的博客&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　在前几天的帖子《Java性能优化[1]：基本类型 vs 引用类型》里，俺大概介绍了“引用类型”与“基本类型”在存储上的区别。昨天有网友在评论中批评说“引用类型变量和它所引用的对象”没区分清楚，容易混淆。所以今天专门来说一下引用类型的相关细节。&lt;/p&gt;
    
    </summary>
    
      <category term="Java注意" scheme="https://sqmwin.github.io/categories/Java%E6%B3%A8%E6%84%8F/"/>
    
    
      <category term="学习技巧" scheme="https://sqmwin.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Java入门" scheme="https://sqmwin.github.io/tags/Java%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>Java新手的通病</title>
    <link href="https://sqmwin.github.io/2017/12/31/java-attetion-2/"/>
    <id>https://sqmwin.github.io/2017/12/31/java-attetion-2/</id>
    <published>2017-12-31T11:19:46.000Z</published>
    <updated>2018-01-01T06:10:56.581Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本文摘抄自编程随想的博客&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;对算法和数据结构不熟悉&quot;&gt;&lt;a href=&quot;#对算法和数据结构不熟悉&quot; class=&quot;headerlink&quot; title=&quot;对算法和数据结构不熟悉&quot;&gt;&lt;/a&gt;对算法和数据结构不熟悉&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;为什么我先拿“数据结构和算法”说事捏？这玩意是写程序最最基本的东东。不管你使用 Java 还是其它的什么语言，都离不开它。而且这玩意是跨语言的，学好之后不管在哪门语言中都能用得上。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java注意" scheme="https://sqmwin.github.io/categories/Java%E6%B3%A8%E6%84%8F/"/>
    
    
      <category term="学习技巧" scheme="https://sqmwin.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Java入门" scheme="https://sqmwin.github.io/tags/Java%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>学习技术的三部曲:WHAT,HOW,WHY</title>
    <link href="https://sqmwin.github.io/2017/12/31/java-attetion-1/"/>
    <id>https://sqmwin.github.io/2017/12/31/java-attetion-1/</id>
    <published>2017-12-31T11:16:33.000Z</published>
    <updated>2017-12-31T18:39:36.434Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本文摘抄自编程随想的博客&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　最近几天有些网友在邮件里面问我关于学习的问题。有好几个人觉得工作了几年，也学会了不少的类库、框架、甚至语言，但是感觉自己的能力没有太大的提高。因此今天来说一下我个人对这方面的体会，希望对大伙儿（尤其是新手）有帮助。&lt;/p&gt;
    
    </summary>
    
      <category term="Java注意" scheme="https://sqmwin.github.io/categories/Java%E6%B3%A8%E6%84%8F/"/>
    
    
      <category term="学习技巧" scheme="https://sqmwin.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Next更换背景图片或背景颜色</title>
    <link href="https://sqmwin.github.io/2017/12/31/next-background-image/"/>
    <id>https://sqmwin.github.io/2017/12/31/next-background-image/</id>
    <published>2017-12-31T07:23:46.000Z</published>
    <updated>2018-01-01T06:10:56.580Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;​    我使用的的是Next的5.1.3版本的主题,想要更换背景颜色或者图片,在网上找了很多方法,有的建议是在&lt;code&gt;custom.styl&lt;/code&gt;中添加一段代码,指定背景图片&lt;/p&gt;
    
    </summary>
    
      <category term="Next" scheme="https://sqmwin.github.io/categories/Next/"/>
    
    
      <category term="Next" scheme="https://sqmwin.github.io/tags/Next/"/>
    
      <category term="背景图片" scheme="https://sqmwin.github.io/tags/%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://sqmwin.github.io/2017/12/31/hello-world/"/>
    <id>https://sqmwin.github.io/2017/12/31/hello-world/</id>
    <published>2017-12-30T17:19:19.225Z</published>
    <updated>2018-01-01T07:11:00.356Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文章的YAML属性&quot;&gt;&lt;a href=&quot;#文章的YAML属性&quot; class=&quot;headerlink&quot; title=&quot;文章的YAML属性&quot;&gt;&lt;/a&gt;文章的YAML属性&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;key&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;layout&lt;/td&gt;
&lt;td&gt;Layout&lt;/td&gt;
&lt;td&gt;post(文章)或者page(页面)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;创建日期&lt;/td&gt;
&lt;td&gt;创建日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;updated&lt;/td&gt;
&lt;td&gt;修改日期&lt;/td&gt;
&lt;td&gt;文件修改日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;comments&lt;/td&gt;
&lt;td&gt;是否开启评论&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tags&lt;/td&gt;
&lt;td&gt;标签&lt;/td&gt;
&lt;td&gt;每一个标签占一行 以 - 开头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;categories&lt;/td&gt;
&lt;td&gt;分类&lt;/td&gt;
&lt;td&gt;同上,不过只建议分到一个类中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;permalink&lt;/td&gt;
&lt;td&gt;url中的名字(建议设置成英文)&lt;/td&gt;
&lt;td&gt;文件名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;copyright&lt;/td&gt;
&lt;td&gt;自行设置的版权信息&lt;/td&gt;
&lt;td&gt;true or false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;p&gt;&lt;code&gt;&amp;lt;!-- more --&amp;gt;&lt;/code&gt;用在文章中,起到”阅读全文”的效果&lt;/p&gt;
    
    </summary>
    
      <category term="测试" scheme="https://sqmwin.github.io/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="测试" scheme="https://sqmwin.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
